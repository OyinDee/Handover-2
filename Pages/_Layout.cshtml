@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@inject SignInManager<IdentityUser> SignInManager
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject IHttpContextAccessor HttpContextAccessor
@{
    var token = Antiforgery.GetAndStoreTokens(HttpContextAccessor.HttpContext).RequestToken;
}

<!DOCTYPE html>
<html lang="en">
<head>

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <script src="~/js/notifications.js"></script>

</head>
<body class="@ViewData["BodyClass"]">
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="/">Handover 2</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Form">Forms</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Approval">Approval</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/ChangeLog">Change Log</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="/Tasks">My Tasks</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="notificationsDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Notifications
                            </a>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notificationsDropdown">
                                <ul id="notificationList" class="list-group list-group-flush">
                                    <li class="list-group-item">No new notifications</li>
                                </ul>
                            </div>
                        </li>
                        <li class="nav-item">
                            <form method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="~/" id="logoutForm" class="form-inline">
                                <button type="submit" class="btn btn-outline-danger">Logout</button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
                        </li>
                    }
                </ul>
            </div>
        </nav>
    </header>

    @RenderBody()

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub")
                .withAutomaticReconnect()
                .build();

            connection.on("ReceiveNotification", function (message) {
                const notificationList = document.getElementById("notificationList");
                const newNotification = document.createElement("li");
                newNotification.className = "list-group-item";
                newNotification.textContent = message;
                notificationList.prepend(newNotification);
            });

            connection.on("ReceiveNotificationList", function (notifications) {
                const notificationList = document.getElementById("notificationList");
                notificationList.innerHTML = '';
                
                if (!notifications || notifications.length === 0) {
                    notificationList.innerHTML = '<li class="list-group-item">No new notifications</li>';
                    return;
                }

                notifications.forEach(notification => {
                    const newNotification = document.createElement("li");
                    newNotification.className = "list-group-item";
                    newNotification.textContent = notification.message;
                    notificationList.appendChild(newNotification);
                });
            });

            connection.start()
                .then(() => console.log("SignalR Connected"))
                .catch(err => console.error("SignalR Connection Error:", err));

            document.getElementById("notificationsDropdown").addEventListener("click", async function () {
                const notificationList = document.getElementById("notificationList");
                notificationList.innerHTML = '<li class="list-group-item">Loading...</li>';

                try {
                    await connection.invoke("GetUserNotifications");
                } catch (error) {
                    console.error("Error fetching notifications:", error);
                    notificationList.innerHTML = '<li class="list-group-item">Error loading notifications</li>';
                }
            });
        });
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
